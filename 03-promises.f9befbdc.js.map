{"mappings":"gBAEuBA,EAAUC,E,geAFjCC,EAAA,UAEuBF,EAeT,EAfmBC,EAehB,KAdD,IAAIE,SAAQ,SAACC,EAASC,GAEpCC,YAAW,WACcC,KAAKC,SAAW,GAErCJ,EAAQ,CAAEJ,SAAUA,EAAUC,MAAMA,IAEpCI,EAAO,CAAEL,SAAUA,EAAUC,MAAMA,MAEpCA,OAKkBQ,MAAK,SAAAC,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MACrCU,QAAQC,IAAI,uBAAwCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,UAE3Da,OAAM,SAAAJ,G,IAAGV,EAAQU,EAARV,SAAUC,EAAKS,EAALT,MAClBU,QAAQC,IAAI,sBAAqCC,OAAfb,EAAS,QAAYa,OAANZ,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nfunction createPromise(position, delay) {\nconst promise = new Promise((resolve, reject) => {\n  // Asynchronous operation\n  setTimeout(() => {\n     const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve({ position: position, delay:delay});\n    } else {\n      reject({ position: position, delay:delay});\n    }\n  }, delay);\n});\n  return promise\n}\n\ncreatePromise(2, 1500).then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n"],"names":["position","delay","parcelRequire","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","concat","catch"],"version":3,"file":"03-promises.f9befbdc.js.map"}